# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- dev

pool:
  name: 'Pool_1'

stages:
- stage: Build
  jobs:
  - job: BuildAndTest
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: sdk
        version: '6.x' # Adjust this to your .NET version
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration Release'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        projects: '**/*.csproj'
        arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'drop'

    - task: SonarCloud@1
      inputs:
        sonarCloud: '<SonarCloud-Service-Connection>'
        organization: '<Your-SonarCloud-Organization>'
        scannerMode: 'MSBuild'
        projectKey: '<Your-Project-Key>'
        projectName: '<Your-Project-Name>'
        extraProperties: |
          sonar.verbose=true

- stage: Deploy
  dependsOn: Build
  jobs:
  - job: DeployToAppService
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifactName: 'drop'
        downloadPath: '$(Pipeline.Workspace)'

    - task: AzureWebApp@1
      inputs:
        azureSubscription: '<Azure-Service-Connection>'
        appName: '<Your-App-Service-Name>'
        package: '$(Pipeline.Workspace)/drop/*.zip'
        deploymentMethod: 'zipDeploy'
